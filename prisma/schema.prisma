// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
  
  // 关联关系
  enrollments   Enrollment[]
  attempts      Attempt[]
  mastery       Mastery[]
  conversations Conversation[]
}

model Classroom {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  
  // 关联关系
  enrollments Enrollment[]
  assignments Assignment[]
}

model Enrollment {
  id          String @id @default(cuid())
  userId      String
  classroomId String
  roleInClass String @default("student")
  
  // 关联关系
  User      User      @relation(fields: [userId], references: [id])
  Classroom Classroom @relation(fields: [classroomId], references: [id])
  
  @@unique([userId, classroomId])
}

model Concept {
  id      String @id @default(cuid())
  subject String
  name    String
  grade   String
  weight  Int    @default(1)
  
  // 关联关系
  items   Item[]
  mastery Mastery[]
  mappings ItemKnowledgeSkillMap[]
}

model Item {
  id         String @id @default(cuid())
  conceptId  String
  parentItemId String? // 关联母题ID
  itemType   String  @default("variant") // "parent"|"variant"|"independent"
  difficulty Int    @default(0)
  stem       String // JSON string
  solution   String // JSON string
  
  // 关联关系
  Concept    Concept   @relation(fields: [conceptId], references: [id])
  ParentItem ParentItem? @relation(fields: [parentItemId], references: [id])
  attempts   Attempt[]
  mappings   ItemKnowledgeSkillMap[]
  
  @@index([conceptId, difficulty])
  @@index([parentItemId])
}

model Attempt {
  id        String   @id @default(cuid())
  userId    String
  itemId    String
  correct   Boolean
  timeMs    Int
  createdAt DateTime @default(now())
  
  // 关联关系
  User User @relation(fields: [userId], references: [id])
  Item Item @relation(fields: [itemId], references: [id])
  
  @@index([userId, createdAt])
}

model Mastery {
  userId    String
  conceptId String
  theta     Float    @default(0)
  attempts  Int      @default(0) // 答题次数
  correct   Int      @default(0) // 正确次数
  updatedAt DateTime @default(now()) @updatedAt
  
  // 关联关系
  User    User    @relation(fields: [userId], references: [id])
  Concept Concept @relation(fields: [conceptId], references: [id])
  
  @@id([userId, conceptId])
}

model Conversation {
  id        String   @id @default(cuid())
  userId    String
  subject   String?
  grade     String?
  createdAt DateTime @default(now())
  
  // 关联关系
  messages Message[]
  User     User      @relation(fields: [userId], references: [id])
}

model Message {
  id             String   @id @default(cuid())
  conversationId String
  role           String // user|assistant|system
  content        String
  meta           String? // JSON string
  createdAt      DateTime @default(now())
  
  // 关联关系
  Conversation Conversation @relation(fields: [conversationId], references: [id])
  
  @@index([conversationId, createdAt])
}

model Assignment {
  id          String    @id @default(cuid())
  classroomId String
  title       String
  dueAt       DateTime?
  items       String    // JSON string - array of Item ids / payload
  createdAt   DateTime  @default(now())
  
  // 关联关系
  Classroom Classroom @relation(fields: [classroomId], references: [id])
}

model AnswerCache {
  id        String   @id @default(cuid())
  normHash  String   @unique // hash(query_normalized + subject + grade)
  question  String
  subject   String?
  grade     String?
  answerMd  String
  meta      String?  // JSON string
  createdAt DateTime @default(now())
}

model AuditLog {
  id        String   @id @default(cuid())
  userId    String?
  path      String
  action    String
  detail    String?  // JSON string
  latencyMs Int?
  createdAt DateTime @default(now())
}

// 母题表：存储500道高频母题
model ParentItem {
  id          String @id @default(cuid())
  code        String @unique // M001, M002...
  title       String
  description String?
  subject     String @default("数学")
  grade       String @default("高一")
  difficulty  Int    @default(0)
  priority    Int    @default(1) // 重要性权重
  createdAt   DateTime @default(now())
  
  // 关联关系
  variants    Item[] // 变式题
  mappings    ItemKnowledgeSkillMap[]
}

// 能力表：存储能力维度
model Skill {
  id          String @id @default(cuid())
  name        String
  description String?
  category    String? // "计算能力"、"推理能力"等
  subject     String @default("数学")
  
  // 关联关系
  mappings    ItemKnowledgeSkillMap[]
}

// 三元映射表：题目-知识-能力
model ItemKnowledgeSkillMap {
  id              String @id @default(cuid())
  itemId          String? // 变式题ID
  parentItemId    String? // 母题ID
  conceptId       String  // 知识点ID
  skillId         String  // 能力ID
  knowledgeWeight Float   @default(1.0) // 知识点权重(0-1)
  skillWeight     Float   @default(1.0) // 能力权重(0-1)
  
  // 关联关系
  Item       Item?       @relation(fields: [itemId], references: [id])
  ParentItem ParentItem? @relation(fields: [parentItemId], references: [id])
  Concept    Concept     @relation(fields: [conceptId], references: [id])
  Skill      Skill       @relation(fields: [skillId], references: [id])
  
  @@index([itemId])
  @@index([parentItemId])
  @@index([conceptId])
}